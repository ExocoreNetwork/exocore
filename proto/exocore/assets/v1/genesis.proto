syntax = "proto3";
package exocore.assets.v1;

import "exocore/assets/v1/params.proto";
import "exocore/assets/v1/tx.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/assets/types";

// GenesisState defines the assets module's state. It needs to encompass
// all of the state that is required to start the chain from the genesis
// or in the event of a restart. At this point, it is only built with
// the former in mind.
// TODO: make this state exportable for the case of chain restarts.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
  // client_chains is the list of supported client chains,
  // that are supported at chain genesis (or restart).
  repeated ClientChainInfo client_chains = 2 [(gogoproto.nullable) = false];
  // tokens is the list of supported client chain tokens and total staked amount
  // that are supported at chain genesis (or restart).
  repeated StakingAssetInfo tokens = 3 [(gogoproto.nullable) = false];
  // deposits is the list of deposits, indexed by staker address and
  // then the asset id. The struct is the `StakerAssetInfo`
  // which contains deposits, withdrawable and unbonding amount.
  // at genesis (not chain restart), the unbonding amount must be 0.
  repeated DepositsByStaker deposits = 4 [(gogoproto.nullable) = false];
}

// DepositByStaker is a helper struct to be used in the genesis state.
// It is used to store the staker address and its deposits for each asset ID.
message DepositsByStaker {
  // staker is the address of the staker.
  string staker = 1 [(gogoproto.customname) = "StakerID"];
  // deposits is the list of deposits, indexed by the asset id.
  // The struct is the `StakerAssetInfo` which contains deposits,
  // withdrawable and unbonding amount.
  repeated DepositByAsset deposits = 2 [(gogoproto.nullable) = false];
}

// DepositByAsset is a helper struct to be used in the genesis state.
// It is used to store the asset id and its info for an staker.
// The info contains the deposit amount, the withdrawable amount
// and the amount currently unbonding.
// It is named DepositByAsset (since it is indexed by the assetID)
// and not Deposit to prevent conflict with CrossChainOpType.
message DepositByAsset {
  // asset_id is the id of the asset.
  string asset_id = 1 [(gogoproto.customname) = "AssetID"];
  // info is the asset info.
  StakerAssetInfo info = 2 [(gogoproto.nullable) = false];
}
