syntax = "proto3";
package exocore.oracle;

import "gogoproto/gogo.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/oracle/types";

// Chain represents for the Chain on which token contracts deployed
message Chain{
  //eg."bitcoin"
  string name = 1;
  //TODO: metadata
  string desc = 2;
}

// Token represents the token info
message Token{
  // token name
  string name = 1;
  // id refer to chainList's index
  uint64 chain_id = 2 [(gogoproto.customname) = "ChainID"];
  // if any, like erc20 tokens
  string contract_address = 3;
  // decimal of token price
  int32 decimal = 4;
  // set false when we stop official price oracle service for a specified token
  bool active = 5;
  // refer to assetID from assets module if exists
  string asset_id = 6 [(gogoproto.customname) = "AssetID"];
}

// Endpoint tells where to fetch the price info
message Endpoint{
  //url int refer to TokenList.ID, 0 reprents default for all (as fall back)
  //key refer to tokenID, 1->"https://chainlink.../eth"
  map<uint64,string> offchain = 1; 
  //url  int refer to TokenList.ID, 0 reprents default for all (as fall back)
  //key refer to tokenID, 1->"eth://0xabc...def"
  map<uint64,string> onchain = 2; 
}

// Source represents price data source
message Source {
  // name of price source, like 'chainlink'
  string name = 1;
  // endpoint of corresponding source to fetch price data from
  Endpoint entry = 2;
  //set false when the source is out of service or reject to accept this source for official service
  bool valid = 3;
  // if this source is deteministic or not
  bool deterministic = 4;
}
