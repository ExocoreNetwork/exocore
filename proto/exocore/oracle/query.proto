syntax = "proto3";

package exocore.oracle;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "exocore/oracle/params.proto";
import "exocore/oracle/prices.proto";
import "exocore/oracle/round_info.proto";
import "exocore/oracle/round_data.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/params";
  
  }
  
  // Queries a list of Prices items.
  rpc Prices    (QueryGetPricesRequest) returns (QueryGetPricesResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/prices/{tokenId}";
  
  }
  rpc PricesAll (QueryAllPricesRequest) returns (QueryAllPricesResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/prices";
  
  }
  
  // Queries a list of RoundInfo items.
  rpc RoundInfo    (QueryGetRoundInfoRequest) returns (QueryGetRoundInfoResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/round_info/{tokenId}";
  
  }
  rpc RoundInfoAll (QueryAllRoundInfoRequest) returns (QueryAllRoundInfoResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/round_info";
  
  }
  
  // Queries a list of RoundData items.
  rpc RoundData    (QueryGetRoundDataRequest) returns (QueryGetRoundDataResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/round_data/{tokenId}";
  
  }
  rpc RoundDataAll (QueryAllRoundDataRequest) returns (QueryAllRoundDataResponse) {
    option (google.api.http).get = "/ExocoreNetwork/exocore/oracle/round_data";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPricesRequest {
  int32 tokenId = 1;
}

message QueryGetPricesResponse {
  Prices prices = 1 [(gogoproto.nullable) = false];
}

message QueryAllPricesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPricesResponse {
  repeated Prices                                 prices     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRoundInfoRequest {
  int32 tokenId = 1;
}

message QueryGetRoundInfoResponse {
  RoundInfo roundInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllRoundInfoRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRoundInfoResponse {
  repeated RoundInfo                              roundInfo  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRoundDataRequest {
  int32 tokenId = 1;
}

message QueryGetRoundDataResponse {
  RoundData roundData = 1 [(gogoproto.nullable) = false];
}

message QueryAllRoundDataRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRoundDataResponse {
  repeated RoundData                              roundData  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

