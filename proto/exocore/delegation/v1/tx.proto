
syntax = "proto3";
package exocore.delegation.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/delegation/types";

message ValueField {
  string Amount = 1
  [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message DelegatedSingleAssetInfo {
  string AssetId = 1;
  string TotalDelegatedAmount = 2
  [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  map<string, ValueField> PerOperatorAmounts = 3;
}

message DelegationApproveInfo{
  string signature = 1;
  string salt = 2;
}

message DelegationIncOrDecInfo{
  option (cosmos.msg.v1.signer) = "fromAddress";
  option (amino.name) = "cosmos-sdk/MsgAddOrDecreaseDelegation";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string   fromAddress = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  map<string, ValueField> perOperatorAmounts = 2;
}

message MsgDelegation{
  DelegationIncOrDecInfo baseInfo = 1;
  DelegationApproveInfo approvedInfo = 2;
}

message UndelegationRecord{
  string stakerId = 1;
  string assetId = 2;
  string OperatorAddr = 3
  [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string txHash = 4;
  bool isPending = 5;
  uint64 BlockNumber = 6;
  uint64 CompleteBlockNumber = 7;
  uint64 LzTxNonce = 8;
  string amount = 9
  [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string actualCompletedAmount =10
  [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message UndelegationRecordKeyList {
  repeated string keyList = 1;
}

message DelegationResponse{}

message MsgUndelegation{
  DelegationIncOrDecInfo baseInfo = 1;
}
message UndelegationResponse{}

// Msg defines the delegation Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // CreateClawbackVestingAccount creats a vesting account that is subject to clawback.
  rpc DelegateAssetToOperator(MsgDelegation) returns (DelegationResponse);
  rpc UndelegateAssetFromOperator(MsgUndelegation) returns (UndelegationResponse);
}




