syntax = "proto3";
package exocore.operator.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

import "exocore/operator/v1/tx.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/operator/types";

// GenesisState defines the operator module's genesis state.
message GenesisState {
  // there are no params for this module.
  // operators is a list of the registered operators.
  repeated OperatorInfo operators = 1 [(gogoproto.nullable) = false];
  // TODO: add non-chainID AVS opt-in information for exporting / importing.
  // Although it is not necessary for the bootstrapped genesis, it is
  // necessary for chain restarts.
}

// all operators in the genesis (during bootstrap) are assumed to have
// opted into validating Exocore. however, we still need to set their opt-in
// data. we can do this by calling k.OptIn(ctx, sdk.AccAddress, ctx.ChainID())

// this will then allow us to call
// k.UpdateOptedInAssetsState(ctx, staker, assetID, operator, stakedValue)
// for now, we keep this data in the genesis as the order stored, but
// it would be trivial to alter the order if deemed necessary.
// this relies in GetSpecifiedAssetsPrice, GetStakingAssetInfo, GetAvsSupportedAssets
// the first and third need to be set up and done before this genesis.
// the second is already set up before this genesis.

// StakerRecord is a helper structure for the genesis state. Each record
// contains a staker address and a list of asset IDs with their operator +
// amount combination.
message StakerRecord {
  // staker_id denotes the address + l0id of the staker.
  string staker_id = 1 [(gogoproto.customname) = "StakerID"];
  // staker_details is a list of asset ID + operator + amount combination.
  repeated StakerDetails staker_details = 2 [(gogoproto.nullable) = false];
}

// StakerDetails is a helper structure for the genesis state. Each record
// contains an asset ID and a list of operator + amount combination.
message StakerDetails {
  // asset_id is the unique identifier of the asset.
  string asset_id = 1 [(gogoproto.customname) = "AssetID"];
  // details is a list of operator + amount combination.
  repeated AssetDetails details = 2 [(gogoproto.nullable) = false];
}

// AssetDetails is a helper structure for the genesis state. Each record
// contains an operator and an amount.
message AssetDetails {
  // operator_address is the address of the operator as the bech32
  // version of sdk.AccAddress.
  string operator_address = 1;
  // amount is the amount of the asset staked by the staker for this
  // asset and operator.
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}