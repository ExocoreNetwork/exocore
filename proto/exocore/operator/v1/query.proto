syntax = "proto3";
package exocore.operator.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "cosmos_proto/cosmos.proto";
import "exocore/operator/v1/tx.proto";
import "tendermint/crypto/keys.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/operator/types";

message GetOperatorInfoReq {
  string OperatorAddr = 1
  [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryOperatorConsKeyForChainIdRequest {
  string addr = 1;
  string chain_id = 2;
}

message QueryOperatorConsKeyForChainIdResponse {
  tendermint.crypto.PublicKey public_key = 1 [ (gogoproto.nullable) = false ];
}

service Query {
  rpc GetOperatorInfo(GetOperatorInfoReq) returns(OperatorInfo){
    option (google.api.http).get = "/exocore/delegation/v1/GetOperatorInfo";
  }

  // add services for dogfood
  rpc QueryOperatorConsKeyForChainId(QueryOperatorConsKeyForChainIdRequest) returns (QueryOperatorConsKeyForChainIdResponse) {
    option (google.api.http) = {
      get: "/exocore/operator_consent/v1/GetOperatorConsKey/{addr}/{chain_id}"
    };
  }
}

