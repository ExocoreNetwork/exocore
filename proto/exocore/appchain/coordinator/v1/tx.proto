syntax = "proto3";

package exocore.appchain.coordinator.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "exocore/appchain/common/v1/common.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/appchain/coordinator/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // RegisterSubscriberChain registers a subscriber chain with the coordinator. 
  // By default, it is activated at the next epoch.
  rpc RegisterSubscriberChain(
    RegisterSubscriberChainRequest
  ) returns (RegisterSubscriberChainResponse) {
    option (google.api.http).post = "/exocore/appchain/coordinator/v1/tx/RegisterSubscriberChain";
  }
}

// RegisterSubscriberChainRequest is the request type for the
// RegisterSubscriberChain message.
message RegisterSubscriberChainRequest {
  option (cosmos.msg.v1.signer) = "FromAddress";
  // from_address is the address of the transaction signer. any transactions
  // originating from this address may be used to edit the chain. at some point
  // in the future this will be offloaded to the governance module on the
  // subscriber chain. (TODO)
  string from_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // chain_id is the unique identifier for the chain, serving as the primary key.
  string chain_id = 2 [(gogoproto.customname) = "ChainID"];
  // epoch_identifier specifies the unit of epoch (week, hour, day). It must be
  // registered in the x/epochs module.
  // This epoch is the identifier used by the coordinator to send validator set
  // updates to the subscriber at the end of each epoch. The subscriber chain's
  // genesis is made available at the end of the current epoch
  // (marked by this identifier).
  string epoch_identifier = 3;
  // asset_ids lists the IDs of assets accepted by the subscriber chain.
  repeated string asset_ids = 4 [(gogoproto.customname) = "AssetIDs"];
  // min_self_delegation_usd is the minimum self-delegation in USD required to
  // be a validator on the chain.
  uint64 min_self_delegation_usd = 5;
  // max_validators is the maximum number of validators allowed on the chain.
  uint32 max_validators = 6;
  // subscriber_params are the parameters used by the subscriber module
  // on the subscriber chain.
  exocore.appchain.common.v1.SubscriberParams subscriber_params = 7 [(gogoproto.nullable) = false];
}

// RegisterSubscriberChainResponse defines the response structure for executing a
// RegisterSubscriberChain message.
message RegisterSubscriberChainResponse {}