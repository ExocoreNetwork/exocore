syntax = "proto3";

package exocore.dogfood.v1;

import "exocore/dogfood/v1/dogfood.proto";
import "exocore/dogfood/v1/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/dogfood/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/exocore/dogfood/params";
  }

  // OptOutsToFinish queries the operators whose opt-outs will finish at the given epoch.
  rpc OptOutsToFinish(QueryOptOutsToFinishRequest) returns (AccountAddresses) {
    option (google.api.http).get = "/exocore/dogfood/opt_outs_to_finish/{epoch}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryOptOutsToFinishRequest is request type for the Query/OptOutsToFinish RPC method.
message QueryOptOutsToFinishRequest {
  // epoch is the epoch to query opt-outs for.
  int64 epoch = 1;
}