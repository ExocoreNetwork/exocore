syntax = "proto3";
package exocore.avs.v1;

import "cosmos_proto/cosmos.proto";
import "exocore/avs/v1/tx.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/ExocoreNetwork/exocore/x/avs/types";

// QueryAVSInfoReq is the request to query avs related information
message QueryAVSInfoReq {
  // avs_address is the address of avs
  string avs_address = 1 [(gogoproto.customname) = "AVSAddress"];
}

// QueryAVSInfoResponse is the response of avs related information
message QueryAVSInfoResponse {
  // basic information of avs
  AVSInfo info = 1;
}

// QueryAVSTaskInfoReq is the request to obtain the task information.
message QueryAVSTaskInfoReq {
  // task_addr is the task contract address,its type should be a sdk.AccAddress
  string task_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // task_id is the task identifier
  string task_id = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc QueryAVSInfo(QueryAVSInfoReq) returns (QueryAVSInfoResponse) {
    option (google.api.http).get = "/exocore/avs/QueryAVSInfo";
  }
  // TaskInfo queries the task information.
  rpc QueryAVSTaskInfo(QueryAVSTaskInfoReq) returns (TaskInfo) {
    option (google.api.http).get = "/exocore/avstask/v1/GetAVSTaskInfoReq";
  }
}