// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: exocore/dogfood/v1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// QueryOptOutsToFinishRequest is request type for the Query/OptOutsToFinish RPC method.
type QueryOptOutsToFinishRequest struct {
	// epoch is the epoch to query opt-outs for.
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (m *QueryOptOutsToFinishRequest) Reset()         { *m = QueryOptOutsToFinishRequest{} }
func (m *QueryOptOutsToFinishRequest) String() string { return proto.CompactTextString(m) }
func (*QueryOptOutsToFinishRequest) ProtoMessage()    {}
func (*QueryOptOutsToFinishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{2}
}
func (m *QueryOptOutsToFinishRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryOptOutsToFinishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryOptOutsToFinishRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryOptOutsToFinishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOptOutsToFinishRequest.Merge(m, src)
}
func (m *QueryOptOutsToFinishRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryOptOutsToFinishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOptOutsToFinishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOptOutsToFinishRequest proto.InternalMessageInfo

func (m *QueryOptOutsToFinishRequest) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

// QueryOperatorOptOutFinishEpochRequest is request type for the Query/OperatorOptOutFinishEpoch
// RPC method.
type QueryOperatorOptOutFinishEpochRequest struct {
	// operator is the operator address.
	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (m *QueryOperatorOptOutFinishEpochRequest) Reset()         { *m = QueryOperatorOptOutFinishEpochRequest{} }
func (m *QueryOperatorOptOutFinishEpochRequest) String() string { return proto.CompactTextString(m) }
func (*QueryOperatorOptOutFinishEpochRequest) ProtoMessage()    {}
func (*QueryOperatorOptOutFinishEpochRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{3}
}
func (m *QueryOperatorOptOutFinishEpochRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryOperatorOptOutFinishEpochRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryOperatorOptOutFinishEpochRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryOperatorOptOutFinishEpochRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOperatorOptOutFinishEpochRequest.Merge(m, src)
}
func (m *QueryOperatorOptOutFinishEpochRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryOperatorOptOutFinishEpochRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOperatorOptOutFinishEpochRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOperatorOptOutFinishEpochRequest proto.InternalMessageInfo

func (m *QueryOperatorOptOutFinishEpochRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

// QueryOperatorOptOutFinishEpochResponse is response type for the
// Query/OperatorOptOutFinishEpoch RPC method.
type QueryOperatorOptOutFinishEpochResponse struct {
	// epoch is the epoch when the operator's opt-out will finish.
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (m *QueryOperatorOptOutFinishEpochResponse) Reset() {
	*m = QueryOperatorOptOutFinishEpochResponse{}
}
func (m *QueryOperatorOptOutFinishEpochResponse) String() string { return proto.CompactTextString(m) }
func (*QueryOperatorOptOutFinishEpochResponse) ProtoMessage()    {}
func (*QueryOperatorOptOutFinishEpochResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{4}
}
func (m *QueryOperatorOptOutFinishEpochResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryOperatorOptOutFinishEpochResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryOperatorOptOutFinishEpochResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryOperatorOptOutFinishEpochResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOperatorOptOutFinishEpochResponse.Merge(m, src)
}
func (m *QueryOperatorOptOutFinishEpochResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryOperatorOptOutFinishEpochResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOperatorOptOutFinishEpochResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOperatorOptOutFinishEpochResponse proto.InternalMessageInfo

func (m *QueryOperatorOptOutFinishEpochResponse) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

// QueryUndelegationsToMatureRequest is request type for the Query/UndelegationsToMature RPC method.
type QueryUndelegationsToMatureRequest struct {
	// epoch is the epoch to query undelegations for.
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (m *QueryUndelegationsToMatureRequest) Reset()         { *m = QueryUndelegationsToMatureRequest{} }
func (m *QueryUndelegationsToMatureRequest) String() string { return proto.CompactTextString(m) }
func (*QueryUndelegationsToMatureRequest) ProtoMessage()    {}
func (*QueryUndelegationsToMatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{5}
}
func (m *QueryUndelegationsToMatureRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUndelegationsToMatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUndelegationsToMatureRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUndelegationsToMatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUndelegationsToMatureRequest.Merge(m, src)
}
func (m *QueryUndelegationsToMatureRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryUndelegationsToMatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUndelegationsToMatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUndelegationsToMatureRequest proto.InternalMessageInfo

func (m *QueryUndelegationsToMatureRequest) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

// QueryUndelegationMaturityEpochRequest is request type for the Query/UndelegationMaturityEpoch
// RPC method.
type QueryUndelegationMaturityEpochRequest struct {
	// record_key is the undelegation record key.
	RecordKey string `protobuf:"bytes,1,opt,name=record_key,json=recordKey,proto3" json:"record_key,omitempty"`
}

func (m *QueryUndelegationMaturityEpochRequest) Reset()         { *m = QueryUndelegationMaturityEpochRequest{} }
func (m *QueryUndelegationMaturityEpochRequest) String() string { return proto.CompactTextString(m) }
func (*QueryUndelegationMaturityEpochRequest) ProtoMessage()    {}
func (*QueryUndelegationMaturityEpochRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{6}
}
func (m *QueryUndelegationMaturityEpochRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUndelegationMaturityEpochRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUndelegationMaturityEpochRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUndelegationMaturityEpochRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUndelegationMaturityEpochRequest.Merge(m, src)
}
func (m *QueryUndelegationMaturityEpochRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryUndelegationMaturityEpochRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUndelegationMaturityEpochRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUndelegationMaturityEpochRequest proto.InternalMessageInfo

func (m *QueryUndelegationMaturityEpochRequest) GetRecordKey() string {
	if m != nil {
		return m.RecordKey
	}
	return ""
}

// QueryUndelegationMaturityEpochResponse is response type for the
// Query/UndelegationMaturityEpoch RPC method.
type QueryUndelegationMaturityEpochResponse struct {
	// epoch is the epoch when the undelegation will mature.
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (m *QueryUndelegationMaturityEpochResponse) Reset() {
	*m = QueryUndelegationMaturityEpochResponse{}
}
func (m *QueryUndelegationMaturityEpochResponse) String() string { return proto.CompactTextString(m) }
func (*QueryUndelegationMaturityEpochResponse) ProtoMessage()    {}
func (*QueryUndelegationMaturityEpochResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e23d51a3dceb1c68, []int{7}
}
func (m *QueryUndelegationMaturityEpochResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUndelegationMaturityEpochResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUndelegationMaturityEpochResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUndelegationMaturityEpochResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUndelegationMaturityEpochResponse.Merge(m, src)
}
func (m *QueryUndelegationMaturityEpochResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryUndelegationMaturityEpochResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUndelegationMaturityEpochResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUndelegationMaturityEpochResponse proto.InternalMessageInfo

func (m *QueryUndelegationMaturityEpochResponse) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "exocore.dogfood.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "exocore.dogfood.v1.QueryParamsResponse")
	proto.RegisterType((*QueryOptOutsToFinishRequest)(nil), "exocore.dogfood.v1.QueryOptOutsToFinishRequest")
	proto.RegisterType((*QueryOperatorOptOutFinishEpochRequest)(nil), "exocore.dogfood.v1.QueryOperatorOptOutFinishEpochRequest")
	proto.RegisterType((*QueryOperatorOptOutFinishEpochResponse)(nil), "exocore.dogfood.v1.QueryOperatorOptOutFinishEpochResponse")
	proto.RegisterType((*QueryUndelegationsToMatureRequest)(nil), "exocore.dogfood.v1.QueryUndelegationsToMatureRequest")
	proto.RegisterType((*QueryUndelegationMaturityEpochRequest)(nil), "exocore.dogfood.v1.QueryUndelegationMaturityEpochRequest")
	proto.RegisterType((*QueryUndelegationMaturityEpochResponse)(nil), "exocore.dogfood.v1.QueryUndelegationMaturityEpochResponse")
}

func init() { proto.RegisterFile("exocore/dogfood/v1/query.proto", fileDescriptor_e23d51a3dceb1c68) }

var fileDescriptor_e23d51a3dceb1c68 = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x6d, 0x80, 0x15, 0x66, 0x0e, 0x48, 0xa6, 0x08, 0x16, 0x20, 0x1d, 0x11, 0x0c, 0x04, 0x22,
	0xa1, 0xad, 0x90, 0x56, 0x90, 0x90, 0x3a, 0xb4, 0x5d, 0x26, 0x28, 0x54, 0xe3, 0xc2, 0x25, 0xca,
	0x12, 0x2f, 0x8d, 0xb6, 0xe6, 0xcb, 0x6c, 0x67, 0x2c, 0x4c, 0xbd, 0x70, 0xe4, 0x84, 0xc4, 0x99,
	0x7f, 0xc1, 0x8f, 0xd8, 0x71, 0x12, 0x42, 0xe2, 0x84, 0x50, 0xcb, 0x0f, 0x41, 0xb5, 0xdd, 0xd2,
	0xae, 0x69, 0x2a, 0xed, 0x16, 0xdb, 0xdf, 0x7b, 0xdf, 0x7b, 0xfe, 0x9e, 0x83, 0x0c, 0x72, 0x08,
	0x1e, 0x50, 0x62, 0xfb, 0x10, 0xec, 0x00, 0xf8, 0xf6, 0x41, 0xc5, 0xde, 0x4f, 0x08, 0x4d, 0xad,
	0x98, 0x02, 0x07, 0x8c, 0xd5, 0xb9, 0xa5, 0xce, 0xad, 0x83, 0x8a, 0xbe, 0x9c, 0x81, 0x19, 0x1e,
	0x0b, 0x94, 0x5e, 0xce, 0xa8, 0x88, 0x5d, 0xea, 0x76, 0x98, 0x2a, 0x28, 0x05, 0x10, 0x80, 0xf8,
	0xb4, 0x07, 0x5f, 0x6a, 0xf7, 0x56, 0x00, 0x10, 0xec, 0x11, 0xdb, 0x8d, 0x43, 0xdb, 0x8d, 0x22,
	0xe0, 0x2e, 0x0f, 0x21, 0x52, 0x18, 0xb3, 0x84, 0xf0, 0xdb, 0x81, 0xb2, 0x37, 0x82, 0xa8, 0x45,
	0xf6, 0x13, 0xc2, 0xb8, 0xd9, 0x44, 0x57, 0x27, 0x76, 0x59, 0x0c, 0x11, 0x23, 0x78, 0x15, 0x15,
	0x65, 0xc3, 0x1b, 0xda, 0xb2, 0xf6, 0xe0, 0x72, 0x55, 0xb7, 0xa6, 0x8d, 0x58, 0x12, 0xb3, 0x76,
	0xe1, 0xf8, 0x77, 0xb9, 0xd0, 0x52, 0xf5, 0x66, 0x0d, 0xdd, 0x14, 0x84, 0xcd, 0x98, 0x37, 0x13,
	0xce, 0xb6, 0x60, 0x23, 0x8c, 0x42, 0xd6, 0x56, 0xfd, 0x70, 0x09, 0x2d, 0x90, 0x18, 0xbc, 0xb6,
	0xe0, 0x3d, 0xdf, 0x92, 0x0b, 0xf3, 0x25, 0xba, 0xa7, 0x40, 0x84, 0xba, 0x1c, 0xa8, 0x04, 0x4b,
	0xe4, 0xfa, 0xa0, 0x62, 0x08, 0xd7, 0xd1, 0x25, 0x50, 0x35, 0x82, 0x61, 0xb1, 0x35, 0x5a, 0x9b,
	0x2f, 0xd0, 0xca, 0x3c, 0x12, 0xe5, 0x2e, 0x5b, 0x44, 0x1d, 0xdd, 0x11, 0xf8, 0x77, 0x91, 0x4f,
	0xf6, 0x48, 0x20, 0x2f, 0x6f, 0x0b, 0x5e, 0xb9, 0x3c, 0xa1, 0x24, 0x5f, 0xff, 0x86, 0xd2, 0x3f,
	0x0e, 0x15, 0xb8, 0x90, 0xa7, 0x13, 0xfa, 0x6f, 0x23, 0x44, 0x89, 0x07, 0xd4, 0x77, 0x76, 0x49,
	0xaa, 0x1c, 0x2c, 0xca, 0x9d, 0x4d, 0x92, 0x8e, 0x2c, 0xe4, 0xf0, 0xe4, 0x59, 0xa8, 0x7e, 0xbe,
	0x88, 0x16, 0x04, 0x01, 0xfe, 0x88, 0x8a, 0x72, 0x3c, 0x78, 0x25, 0x6b, 0x74, 0xd3, 0x49, 0xd0,
	0xef, 0xcf, 0xad, 0x93, 0xad, 0xcd, 0xf2, 0xa7, 0x1f, 0x7f, 0xbf, 0x9e, 0x5b, 0xc2, 0xd7, 0xed,
	0xd3, 0x31, 0x95, 0x11, 0xc0, 0xdf, 0x34, 0x74, 0xe5, 0xd4, 0xf8, 0xb1, 0x3d, 0x93, 0x3d, 0x3b,
	0x28, 0xfa, 0xdd, 0x2c, 0x40, 0xc3, 0xf3, 0x20, 0x89, 0x78, 0xc3, 0xf7, 0x29, 0x61, 0x8c, 0x30,
	0xb3, 0x26, 0xb4, 0x3c, 0xc6, 0x8f, 0xa6, 0xb4, 0x40, 0xcc, 0x1d, 0x48, 0x38, 0x73, 0x38, 0x38,
	0x3b, 0x82, 0xd9, 0x3e, 0x12, 0x97, 0xd4, 0xc5, 0x3f, 0x35, 0xb4, 0x34, 0x33, 0x24, 0xb8, 0x9e,
	0xa3, 0x34, 0x3f, 0x9d, 0xfa, 0xb3, 0xb3, 0x40, 0xd5, 0xad, 0x36, 0x84, 0x93, 0xe7, 0xb8, 0x9e,
	0xe1, 0x44, 0x62, 0x1d, 0x65, 0x49, 0xd9, 0x71, 0x84, 0x1b, 0xfb, 0x68, 0x78, 0xdc, 0xc5, 0xdf,
	0x35, 0x74, 0x2d, 0x33, 0xbc, 0xf8, 0xe9, 0x4c, 0x61, 0x79, 0x61, 0xd7, 0x1f, 0x66, 0xc1, 0xc6,
	0x11, 0xad, 0x61, 0x72, 0x99, 0xb9, 0x2a, 0xf4, 0x57, 0xf1, 0x93, 0x29, 0xfd, 0xc9, 0x78, 0x8b,
	0xc1, 0x38, 0x3a, 0xa2, 0xc9, 0xc4, 0x38, 0x66, 0x06, 0x3e, 0x67, 0x1c, 0xf3, 0x1e, 0x5b, 0xce,
	0x38, 0xe6, 0xbe, 0xaf, 0x9c, 0x71, 0x8c, 0xdb, 0x91, 0x56, 0x42, 0x9e, 0x0e, 0x87, 0xf1, 0xff,
	0x71, 0x77, 0xd7, 0x36, 0x8f, 0x7b, 0x86, 0x76, 0xd2, 0x33, 0xb4, 0x3f, 0x3d, 0x43, 0xfb, 0xd2,
	0x37, 0x0a, 0x27, 0x7d, 0xa3, 0xf0, 0xab, 0x6f, 0x14, 0xde, 0x57, 0x82, 0x90, 0xb7, 0x93, 0x6d,
	0xcb, 0x83, 0x8e, 0xbd, 0x2e, 0xe9, 0x5f, 0x13, 0xfe, 0x01, 0xe8, 0xee, 0xa8, 0xdb, 0xe1, 0xa8,
	0x1f, 0x4f, 0x63, 0xc2, 0xb6, 0x8b, 0xe2, 0x27, 0x5e, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0x32,
	0x5c, 0xfd, 0x8e, 0x71, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Params queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// OptOutsToFinish queries the operators whose opt-outs will finish at the given epoch.
	OptOutsToFinish(ctx context.Context, in *QueryOptOutsToFinishRequest, opts ...grpc.CallOption) (*AccountAddresses, error)
	// OperatorOptOutFinishEpoch queries the epoch when the operator's opt-out will finish.
	OperatorOptOutFinishEpoch(ctx context.Context, in *QueryOperatorOptOutFinishEpochRequest, opts ...grpc.CallOption) (*QueryOperatorOptOutFinishEpochResponse, error)
	// UndelegationsToMature queries the undelegations that will mature at the given epoch.
	UndelegationsToMature(ctx context.Context, in *QueryUndelegationsToMatureRequest, opts ...grpc.CallOption) (*UndelegationRecordKeys, error)
	UndelegationMaturityEpoch(ctx context.Context, in *QueryUndelegationMaturityEpochRequest, opts ...grpc.CallOption) (*QueryUndelegationMaturityEpochResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/exocore.dogfood.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) OptOutsToFinish(ctx context.Context, in *QueryOptOutsToFinishRequest, opts ...grpc.CallOption) (*AccountAddresses, error) {
	out := new(AccountAddresses)
	err := c.cc.Invoke(ctx, "/exocore.dogfood.v1.Query/OptOutsToFinish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) OperatorOptOutFinishEpoch(ctx context.Context, in *QueryOperatorOptOutFinishEpochRequest, opts ...grpc.CallOption) (*QueryOperatorOptOutFinishEpochResponse, error) {
	out := new(QueryOperatorOptOutFinishEpochResponse)
	err := c.cc.Invoke(ctx, "/exocore.dogfood.v1.Query/OperatorOptOutFinishEpoch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) UndelegationsToMature(ctx context.Context, in *QueryUndelegationsToMatureRequest, opts ...grpc.CallOption) (*UndelegationRecordKeys, error) {
	out := new(UndelegationRecordKeys)
	err := c.cc.Invoke(ctx, "/exocore.dogfood.v1.Query/UndelegationsToMature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) UndelegationMaturityEpoch(ctx context.Context, in *QueryUndelegationMaturityEpochRequest, opts ...grpc.CallOption) (*QueryUndelegationMaturityEpochResponse, error) {
	out := new(QueryUndelegationMaturityEpochResponse)
	err := c.cc.Invoke(ctx, "/exocore.dogfood.v1.Query/UndelegationMaturityEpoch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Params queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// OptOutsToFinish queries the operators whose opt-outs will finish at the given epoch.
	OptOutsToFinish(context.Context, *QueryOptOutsToFinishRequest) (*AccountAddresses, error)
	// OperatorOptOutFinishEpoch queries the epoch when the operator's opt-out will finish.
	OperatorOptOutFinishEpoch(context.Context, *QueryOperatorOptOutFinishEpochRequest) (*QueryOperatorOptOutFinishEpochResponse, error)
	// UndelegationsToMature queries the undelegations that will mature at the given epoch.
	UndelegationsToMature(context.Context, *QueryUndelegationsToMatureRequest) (*UndelegationRecordKeys, error)
	UndelegationMaturityEpoch(context.Context, *QueryUndelegationMaturityEpochRequest) (*QueryUndelegationMaturityEpochResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) OptOutsToFinish(ctx context.Context, req *QueryOptOutsToFinishRequest) (*AccountAddresses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptOutsToFinish not implemented")
}
func (*UnimplementedQueryServer) OperatorOptOutFinishEpoch(ctx context.Context, req *QueryOperatorOptOutFinishEpochRequest) (*QueryOperatorOptOutFinishEpochResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperatorOptOutFinishEpoch not implemented")
}
func (*UnimplementedQueryServer) UndelegationsToMature(ctx context.Context, req *QueryUndelegationsToMatureRequest) (*UndelegationRecordKeys, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndelegationsToMature not implemented")
}
func (*UnimplementedQueryServer) UndelegationMaturityEpoch(ctx context.Context, req *QueryUndelegationMaturityEpochRequest) (*QueryUndelegationMaturityEpochResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndelegationMaturityEpoch not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exocore.dogfood.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_OptOutsToFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryOptOutsToFinishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).OptOutsToFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exocore.dogfood.v1.Query/OptOutsToFinish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).OptOutsToFinish(ctx, req.(*QueryOptOutsToFinishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_OperatorOptOutFinishEpoch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryOperatorOptOutFinishEpochRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).OperatorOptOutFinishEpoch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exocore.dogfood.v1.Query/OperatorOptOutFinishEpoch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).OperatorOptOutFinishEpoch(ctx, req.(*QueryOperatorOptOutFinishEpochRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_UndelegationsToMature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUndelegationsToMatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).UndelegationsToMature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exocore.dogfood.v1.Query/UndelegationsToMature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).UndelegationsToMature(ctx, req.(*QueryUndelegationsToMatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_UndelegationMaturityEpoch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUndelegationMaturityEpochRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).UndelegationMaturityEpoch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exocore.dogfood.v1.Query/UndelegationMaturityEpoch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).UndelegationMaturityEpoch(ctx, req.(*QueryUndelegationMaturityEpochRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exocore.dogfood.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "OptOutsToFinish",
			Handler:    _Query_OptOutsToFinish_Handler,
		},
		{
			MethodName: "OperatorOptOutFinishEpoch",
			Handler:    _Query_OperatorOptOutFinishEpoch_Handler,
		},
		{
			MethodName: "UndelegationsToMature",
			Handler:    _Query_UndelegationsToMature_Handler,
		},
		{
			MethodName: "UndelegationMaturityEpoch",
			Handler:    _Query_UndelegationMaturityEpoch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "exocore/dogfood/v1/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryOptOutsToFinishRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryOptOutsToFinishRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryOptOutsToFinishRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Epoch != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Epoch))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryOperatorOptOutFinishEpochRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryOperatorOptOutFinishEpochRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryOperatorOptOutFinishEpochRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Operator) > 0 {
		i -= len(m.Operator)
		copy(dAtA[i:], m.Operator)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Operator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryOperatorOptOutFinishEpochResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryOperatorOptOutFinishEpochResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryOperatorOptOutFinishEpochResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Epoch != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Epoch))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryUndelegationsToMatureRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUndelegationsToMatureRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUndelegationsToMatureRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Epoch != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Epoch))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryUndelegationMaturityEpochRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUndelegationMaturityEpochRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUndelegationMaturityEpochRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RecordKey) > 0 {
		i -= len(m.RecordKey)
		copy(dAtA[i:], m.RecordKey)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.RecordKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryUndelegationMaturityEpochResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUndelegationMaturityEpochResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUndelegationMaturityEpochResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Epoch != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Epoch))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryOptOutsToFinishRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Epoch != 0 {
		n += 1 + sovQuery(uint64(m.Epoch))
	}
	return n
}

func (m *QueryOperatorOptOutFinishEpochRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Operator)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryOperatorOptOutFinishEpochResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Epoch != 0 {
		n += 1 + sovQuery(uint64(m.Epoch))
	}
	return n
}

func (m *QueryUndelegationsToMatureRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Epoch != 0 {
		n += 1 + sovQuery(uint64(m.Epoch))
	}
	return n
}

func (m *QueryUndelegationMaturityEpochRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RecordKey)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryUndelegationMaturityEpochResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Epoch != 0 {
		n += 1 + sovQuery(uint64(m.Epoch))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryOptOutsToFinishRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryOptOutsToFinishRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryOptOutsToFinishRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
			}
			m.Epoch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epoch |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryOperatorOptOutFinishEpochRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryOperatorOptOutFinishEpochRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryOperatorOptOutFinishEpochRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryOperatorOptOutFinishEpochResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryOperatorOptOutFinishEpochResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryOperatorOptOutFinishEpochResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
			}
			m.Epoch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epoch |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUndelegationsToMatureRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUndelegationsToMatureRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUndelegationsToMatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
			}
			m.Epoch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epoch |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUndelegationMaturityEpochRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUndelegationMaturityEpochRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUndelegationMaturityEpochRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUndelegationMaturityEpochResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUndelegationMaturityEpochResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUndelegationMaturityEpochResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
			}
			m.Epoch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epoch |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
